local Package = script.Parent.Parent.Parent.Parent.Parent

local LuauCeption = require(Package.Vendor.LuauCeption)

local VMBindings = require(Package.Client.Singletons.VM.Bindings)
local VMTypes = require(Package.Client.Singletons.VM.Types)
local VMConstants = require(Package.Client.Singletons.VM.Constants)
local VMMacros = require(Package.Client.Singletons.VM.Macros)

local cFunctions = LuauCeption.wasm.cfns

return function(luaState: VMTypes.LuaState)
	VMMacros.lua_newtable(luaState)
	VMMacros.lua_newtable(luaState)

	cFunctions.lua_pushstring(luaState, VMBindings:LoadCString("The metatable is locked"))
	cFunctions.lua_setfield(luaState, -2, VMBindings:LoadCString("__metatable"))

	cFunctions.lua_pushvalue(luaState, VMConstants.LUAU_GLOBALSINDEX)
	cFunctions.lua_setfield(luaState, -2, VMBindings:LoadCString("__index"))

	cFunctions.lua_setmetatable(luaState, -2)

	cFunctions.lua_getfield(luaState, VMConstants.LUA_REGISTRYINDEX, VMBindings:LoadCString("global"))
	cFunctions.lua_setfield(luaState, -2, VMBindings:LoadCString("_G"))

	cFunctions.lua_getfield(luaState, VMConstants.LUA_REGISTRYINDEX, VMBindings:LoadCString("shared"))
	cFunctions.lua_setfield(luaState, -2, VMBindings:LoadCString("shared"))

	cFunctions.lua_setfield(luaState, VMConstants.LUA_REGISTRYINDEX, VMBindings:LoadCString("script.exploit.environment"))
end
